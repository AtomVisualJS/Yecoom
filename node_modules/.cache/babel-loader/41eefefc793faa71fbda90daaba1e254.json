{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport GetAllProducts from \"../../api/products\";\nconst productsSlice = createSlice({\n  name: 'products',\n  initialState: {\n    products: [],\n    loading: false,\n    error: null\n  },\n  extraReducers: {\n    [GetAllProducts.pending]: (state, action) => {\n      state.loading = true;\n    },\n    [GetAllProducts.fulfilled]: (state, action) => {\n      state.products = action.payload;\n      state.loading = false;\n    },\n    [GetAllProducts.rejected]: (state, action) => {\n      state.error = action.error;\n      state.loading = false;\n    }\n  }\n});\nexport default productsSlice.reducer;","map":{"version":3,"sources":["/Users/atomjs/Desktop/APPP/redux-essentials-example/src/features/posts/PostsSlice.js"],"names":["createSlice","GetAllProducts","productsSlice","name","initialState","products","loading","error","extraReducers","pending","state","action","fulfilled","payload","rejected","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,OAAOC,cAAP,MAA2B,oBAA3B;AAGA,MAAMC,aAAa,GAAGF,WAAW,CAAC;AAC9BG,EAAAA,IAAI,EAAE,UADwB;AAE9BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,OAAO,EAAE,KAFC;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAFgB;AAO9BC,EAAAA,aAAa,EAAE;AACX,KAACP,cAAc,CAACQ,OAAhB,GAA0B,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,CAACJ,OAAN,GAAgB,IAAhB;AACH,KAHU;AAIX,KAACL,cAAc,CAACW,SAAhB,GAA4B,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC3CD,MAAAA,KAAK,CAACL,QAAN,GAAiBM,MAAM,CAACE,OAAxB;AACAH,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACH,KAPU;AAQX,KAACL,cAAc,CAACa,QAAhB,GAA2B,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,MAAAA,KAAK,CAACH,KAAN,GAAcI,MAAM,CAACJ,KAArB;AACAG,MAAAA,KAAK,CAACJ,OAAN,GAAgB,KAAhB;AACH;AAXU;AAPe,CAAD,CAAjC;AAsBA,eAAeJ,aAAa,CAACa,OAA7B","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\"\nimport GetAllProducts from \"../../api/products\"\n\n\nconst productsSlice = createSlice({\n    name: 'products',\n    initialState: {\n        products: [],\n        loading: false,\n        error: null\n    },\n    extraReducers: {\n        [GetAllProducts.pending]: (state, action) => {\n            state.loading = true\n        },\n        [GetAllProducts.fulfilled]: (state, action) => {\n            state.products = action.payload\n            state.loading = false\n        },\n        [GetAllProducts.rejected]: (state, action) => {\n            state.error = action.error\n            state.loading = false\n        },\n    },\n})\n\nexport default productsSlice.reducer"]},"metadata":{},"sourceType":"module"}