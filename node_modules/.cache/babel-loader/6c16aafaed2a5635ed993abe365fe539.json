{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { getAllUsers } from \"./GetUsers\";\nconst initialState = [{\n  id: \"0\",\n  name: \"Tianna Jenkins\"\n}, {\n  id: \"1\",\n  name: \"Kevin Grant\"\n}, {\n  id: \"2\",\n  name: \"Madison Price\"\n}];\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getAllUsers.fulfilled]: (state, action) => {\n      state = action.payload;\n    },\n    [getAllUsers.rejected]: (state, action) => {\n      state = er;\n    },\n    [getAllUsers.pending]: (state, action) => {\n      state = true;\n    }\n  }\n});\nexport default userSlice.reducer;","map":{"version":3,"sources":["/Users/atomjs/Desktop/APPP/App/src/Utils/client/userSlice.js"],"names":["createSlice","getAllUsers","initialState","id","name","userSlice","reducers","extraReducers","fulfilled","state","action","payload","rejected","er","pending","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,YAA5B;AAEA,MAAMC,YAAY,GAAG,CACnB;AAAEC,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CADmB,EAEnB;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAFmB,EAGnB;AAAED,EAAAA,EAAE,EAAE,GAAN;AAAWC,EAAAA,IAAI,EAAE;AAAjB,CAHmB,CAArB;AAMA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC5BI,EAAAA,IAAI,EAAE,OADsB;AAE5BF,EAAAA,YAF4B;AAG5BI,EAAAA,QAAQ,EAAE,EAHkB;AAI5BC,EAAAA,aAAa,EAAE;AACb,KAACN,WAAW,CAACO,SAAb,GAAyB,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC1CD,MAAAA,KAAK,GAAGC,MAAM,CAACC,OAAf;AACD,KAHY;AAIb,KAACV,WAAW,CAACW,QAAb,GAAwB,CAACH,KAAD,EAAQC,MAAR,KAAmB;AACzCD,MAAAA,KAAK,GAAGI,EAAR;AAED,KAPY;AAQb,KAACZ,WAAW,CAACa,OAAb,GAAuB,CAACL,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,GAAG,IAAR;AACD;AAVY;AAJa,CAAD,CAA7B;AAkBA,eAAeJ,SAAS,CAACU,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { getAllUsers } from \"./GetUsers\";\n\nconst initialState = [\n  { id: \"0\", name: \"Tianna Jenkins\" },\n  { id: \"1\", name: \"Kevin Grant\" },\n  { id: \"2\", name: \"Madison Price\" },\n];\n\nconst userSlice = createSlice({\n  name: \"users\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getAllUsers.fulfilled]: (state, action) => {\n      state = action.payload;\n    },\n    [getAllUsers.rejected]: (state, action) => {\n      state = er\n\n    },\n    [getAllUsers.pending]: (state, action) => {\n      state = true;\n    }\n  },\n});\n\nexport default userSlice.reducer;\n"]},"metadata":{},"sourceType":"module"}