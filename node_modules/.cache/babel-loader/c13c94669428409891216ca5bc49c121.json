{"ast":null,"code":"var _jsxFileName = \"/Users/atomjs/Desktop/APPP/redux-essentials-example/src/features/posts/SinglePostPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { GetAllProducts } from '../../api/products';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SinglePostPage = _ref => {\n  _s();\n\n  let {\n    match\n  } = _ref;\n  const {\n    postId\n  } = match.params;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(GetAllProducts());\n  }, [dispatch]);\n  const post = useSelector(state => state.posts.posts[postId]);\n  console.log(post);\n\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Post not found!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: post.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SinglePostPage, \"pv4aXZMUULYwdu+dr2O0pH+909w=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SinglePostPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePostPage\");","map":{"version":3,"sources":["/Users/atomjs/Desktop/APPP/redux-essentials-example/src/features/posts/SinglePostPage.js"],"names":["React","useEffect","useSelector","useDispatch","GetAllProducts","SinglePostPage","match","postId","params","dispatch","post","state","posts","console","log","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,cAAR,QAA6B,oBAA7B;;AAIA,OAAO,MAAMC,cAAc,GAAG,QAAe;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AAEzC,QAAM;AAAEC,IAAAA;AAAF,MAAaD,KAAK,CAACE,MAAzB;AAEF,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACL,cAAc,EAAf,CAAR;AACC,GAFM,EAEJ,CAACK,QAAD,CAFI,CAAT;AAKE,QAAMC,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAkBL,MAAlB,CAAV,CAAxB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AAIF,MAAI,CAACA,IAAL,EAAW;AACT,wBACE;AAAA,6BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAED,sBACE;AAAA,cACGA,IAAI,CAACK;AADR;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CA7BM;;GAAMV,c;UAIMF,W,EAOFD,W;;;KAXJG,c","sourcesContent":["import React, { useEffect } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useDispatch } from 'react-redux'\nimport {GetAllProducts} from '../../api/products'\n\n\n\nexport const SinglePostPage = ({ match }) => {\n  \n    const { postId } = match.params  \n\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(GetAllProducts())\n    }, [dispatch])\n\n\n    const post = useSelector(state => state.posts.posts[postId])\n    console.log(post)\n\n\n\n  if (!post) {\n    return (\n      <section>\n        <h2>Post not found!</h2>\n      </section>\n    )\n  }\n\n  return (\n    <section>\n      {post.name}\n    </section>\n  )\n}"]},"metadata":{},"sourceType":"module"}